# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  consul_cluster = [
    {
      :hostname => "consul1",
      :box => "hashicorp/bionic64",
      :ip => "192.168.56.10",
      :port => 8500,
    },
    {
      :hostname => "consul2",
      :box => "hashicorp/bionic64",
      :ip => "192.168.56.11",
      :port => 8501,
    },
    {
      :hostname => "consul3",
      :box => "hashicorp/bionic64",
      :ip => "192.168.56.12",
      :port => 8502,
    }
  ]

  consul_cluster.each do |consul|
    config.vm.define consul[:hostname] do |node|
      node.vm.box = consul[:box]
      node.vm.hostname = consul[:hostname]
      node.vm.network :private_network, ip: consul[:ip]
      node.vm.network "forwarded_port", host: consul[:port], guest: 8500

      node.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", 1024]
        vb.customize ["modifyvm", :id, "--cpus", 1]
      end

      node.vm.synced_folder "./config/consul/server", "/etc/consul/config"
      node.vm.synced_folder "./service", "/service/"
      node.vm.synced_folder "./bins", "/bins/"
    
      node.vm.provision "shell", inline: <<-SHELL
        cp /bins/consul /usr/bin/consul
        cp /service/consul.service /etc/systemd/system/consul.service
        systemctl enable consul
        systemctl start consul
      SHELL
    end
    
  end


  
  nomad_cluster = [
    {
      :hostname => "nomad1",
      :box => "hashicorp/bionic64",
      :ip => "192.168.56.20",
      :port => 4646,
    },
    #{
    #  :hostname => "nomad2",
    #  :box => "hashicorp/bionic64",
    #  :ip => "192.168.56.21",
    #  :port => 4647,
    #},
    #{
    #  :hostname => "nomad3",
    #  :box => "hashicorp/bionic64",
    #  :ip => "192.168.56.22",
    #  :port => 4648,
    #}
  ]

  nomad_cluster.each do |nomad|
    config.vm.define nomad[:hostname] do |node|
      node.vm.box = nomad[:box]
      node.vm.hostname = nomad[:hostname]
      node.vm.network :private_network, ip: nomad[:ip]
      node.vm.network "forwarded_port", host: nomad[:port], guest: 4646

      node.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", 1024]
        vb.customize ["modifyvm", :id, "--cpus", 1]
      end
     
      node.vm.synced_folder "./config/consul/client", "/etc/consul/config"
      node.vm.synced_folder "./config/nomad/server", "/etc/nomad.d/config"
      node.vm.synced_folder "./service", "/service/"
      node.vm.synced_folder "./bins", "/bins/"
   
      node.vm.provision "shell", inline: <<-SHELL
        cp /bins/consul /usr/bin/consul
        cp /bins/nomad /usr/bin/nomad
        cp /service/consul.service /etc/systemd/system/consul.service
        cp /service/nomad.service /etc/systemd/system/nomad.service
        systemctl enable consul
        systemctl start consul
        systemctl enable nomad
        systemctl start nomad
      SHELL
    end
   
  end

  node_cluster = [
    {
      :hostname => "node1",
      :box => "hashicorp/bionic64",
      :ip => "192.168.56.30",
      #:port => 4646,
    },
    {
      :hostname => "node2",
      :box => "hashicorp/bionic64",
      :ip => "192.168.56.31",
      #:port => 4647,
    },
    {
      :hostname => "node3",
      :box => "hashicorp/bionic64",
      :ip => "192.168.56.32",
      #:port => 4648,
    }
  ]

  node_cluster.each do |client|
    config.vm.define client[:hostname] do |node|
      node.vm.box = client[:box]
      node.vm.hostname = client[:hostname]
      node.vm.network :private_network, ip: client[:ip]
      #node.vm.network "forwarded_port", host: nomad[:port], guest: 4646

      node.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", 1024]
        vb.customize ["modifyvm", :id, "--cpus", 1]
      end
     
      node.vm.synced_folder "./config/consul/client", "/etc/consul/config"
      node.vm.synced_folder "./config/nomad/client", "/etc/nomad.d/config"
      node.vm.synced_folder "./service", "/service/"
      node.vm.synced_folder "./bins", "/bins/"
   
      node.vm.provision "shell", inline: <<-SHELL
        cp /bins/consul /usr/bin/consul
        cp /bins/nomad /usr/bin/nomad
        cp /service/consul.service /etc/systemd/system/consul.service
        cp /service/nomad.service /etc/systemd/system/nomad.service
        systemctl enable consul
        systemctl start consul
        systemctl enable nomad
        systemctl start nomad
      SHELL
    end
   
  end
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
